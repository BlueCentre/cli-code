name: Python CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]  # Trigger on tags starting with v
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read # Allow checkout

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"] # Match requires-python in pyproject.toml

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff # Install ruff separately first
        pip install -e .[dev]
        # If no [dev] extra, install lint/test tools separately:
        # pip install -e .
        # pip install ruff pytest # Example tools

    - name: Debug Python Path
      run: python -c "import sys; print(sys.path)"

    - name: Lint with Ruff (check)
      run: |
        ruff check --verbose --preview .

    - name: Lint with Ruff (format)
      run: |
        ruff format .

    - name: Test with pytest
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      if: env.GEMINI_API_KEY != ''
      run: |
        pytest test_dir/

    - name: Build package
      run: python -m build
      
    - name: Store built packages
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
        retention-days: 7
        
  publish:
    name: Publish to PyPI
    needs: build-and-test
    # Only publish when a tag is pushed
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cli-code-agent
    permissions:
      id-token: write  # Required for PyPI publishing with trusted publishing
      
    steps:
    - name: Download built packages
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1 